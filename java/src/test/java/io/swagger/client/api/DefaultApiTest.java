/*
 * FilipÂ´s API of Things
 * Some description here of the full API  GitHub Flavored Markdown can be used for rich text representation,     such as **bold**, *italic* and [links](https://swagger.io).           # Useful links for the tasks:  * **[REST Design Guidelines V4](https://confluence.tech.dnb.no/pages/viewpage.action?pageId=33488367)**  * **[SwaggerHub Way of Work](https://confluence.tech.dnb.no/display/KKO/SwaggerHub%3A+REST+API+Design+tool\\#SwaggerHub:RESTAPIDesigntool-WayofWork)**      
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ErrorResponse;
import io.swagger.client.model.PatchThingRequest;
import io.swagger.client.model.PostThingRequest;
import io.swagger.client.model.Thing;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * Short summary of the API Operation: ex: Get all things
     *
     * Description goes HERE  DNB naming convention: Root resource of API &#x3D; Name of API. Example: http://api.dnb.no/v1/accounts/ &#x3D; Accounts API 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void thingsGetTest() throws ApiException {
        String xDNBAPITraceId = null;
        String xDNBAPICustomHeader = null;
        String xDNBAPICustomHeader2 = null;
        String field1 = null;
        List<Thing> response = api.thingsGet(xDNBAPITraceId, xDNBAPICustomHeader, xDNBAPICustomHeader2, field1);

        // TODO: test validations
    }
    
    /**
     * Short summary of the API Operation: ex: Create one thing
     *
     * Description goes HERE 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void thingsPostTest() throws ApiException {
        String xDNBAPITraceId = null;
        String xDNBAPICustomHeader = null;
        String xDNBAPICustomHeader2 = null;
        PostThingRequest body = null;
        Thing response = api.thingsPost(xDNBAPITraceId, xDNBAPICustomHeader, xDNBAPICustomHeader2, body);

        // TODO: test validations
    }
    
    /**
     * Short summary of the API Operation: ex: Delete one thing by objectId
     *
     * Description goes HERE 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void thingsThingIdDeleteTest() throws ApiException {
        String thingId = null;
        String xDNBAPITraceId = null;
        String xDNBAPICustomHeader = null;
        String xDNBAPICustomHeader2 = null;
        api.thingsThingIdDelete(thingId, xDNBAPITraceId, xDNBAPICustomHeader, xDNBAPICustomHeader2);

        // TODO: test validations
    }
    
    /**
     * Short summary of the API Operation: ex: Get one thing by objectId
     *
     * Description goes HERE 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void thingsThingIdGetTest() throws ApiException {
        String thingId = null;
        String xDNBAPITraceId = null;
        String xDNBAPICustomHeader = null;
        String xDNBAPICustomHeader2 = null;
        Thing response = api.thingsThingIdGet(thingId, xDNBAPITraceId, xDNBAPICustomHeader, xDNBAPICustomHeader2);

        // TODO: test validations
    }
    
    /**
     * Short summary of the API Operation: ex: Update one thing by objectId
     *
     * Description goes HERE 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void thingsThingIdPatchTest() throws ApiException {
        String thingId = null;
        String xDNBAPITraceId = null;
        String xDNBAPICustomHeader = null;
        String xDNBAPICustomHeader2 = null;
        PatchThingRequest body = null;
        Thing response = api.thingsThingIdPatch(thingId, xDNBAPITraceId, xDNBAPICustomHeader, xDNBAPICustomHeader2, body);

        // TODO: test validations
    }
    
    /**
     * Short summary of the API Operation: ex: Get one thing by objectId
     *
     * Description goes HERE 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void thingsThingIdSpecialThingGetTest() throws ApiException {
        String xDNBAPITraceId = null;
        String xDNBAPICustomHeader = null;
        String thingId = null;
        String xDNBAPICustomHeader2 = null;
        Thing response = api.thingsThingIdSpecialThingGet(xDNBAPITraceId, xDNBAPICustomHeader, thingId, xDNBAPICustomHeader2);

        // TODO: test validations
    }
    
}
