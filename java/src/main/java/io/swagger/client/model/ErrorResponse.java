/*
 * FilipÂ´s API of Things
 * Some description here of the full API  GitHub Flavored Markdown can be used for rich text representation,     such as **bold**, *italic* and [links](https://swagger.io).           # Useful links for the tasks:  * **[REST Design Guidelines V4](https://confluence.tech.dnb.no/pages/viewpage.action?pageId=33488367)**  * **[SwaggerHub Way of Work](https://confluence.tech.dnb.no/display/KKO/SwaggerHub%3A+REST+API+Design+tool\\#SwaggerHub:RESTAPIDesigntool-WayofWork)**      
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.BackendResponse;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Object representing error on this API, with optional additional information from backend systems for help in debugging/logging. 
 */
@ApiModel(description = "Object representing error on this API, with optional additional information from backend systems for help in debugging/logging. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-14T11:51:05.361Z")



public class ErrorResponse {
  @SerializedName("statusCode")
  private String statusCode = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("backendInfo")
  private List<BackendResponse> backendInfo = null;

  public ErrorResponse statusCode(String statusCode) {
    this.statusCode = statusCode;
    return this;
  }

   /**
   * Error code (determined on this API service): Any Errorcode important enough to need handling by consumer should be promotoed to a specific status code value and shown in this field. 
   * @return statusCode
  **/
  @ApiModelProperty(required = true, value = "Error code (determined on this API service): Any Errorcode important enough to need handling by consumer should be promotoed to a specific status code value and shown in this field. ")
  public String getStatusCode() {
    return statusCode;
  }

  public void setStatusCode(String statusCode) {
    this.statusCode = statusCode;
  }

  public ErrorResponse message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Readable message associated with statuscode.
   * @return message
  **/
  @ApiModelProperty(required = true, value = "Readable message associated with statuscode.")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public ErrorResponse backendInfo(List<BackendResponse> backendInfo) {
    this.backendInfo = backendInfo;
    return this;
  }

  public ErrorResponse addBackendInfoItem(BackendResponse backendInfoItem) {
    if (this.backendInfo == null) {
      this.backendInfo = new ArrayList<BackendResponse>();
    }
    this.backendInfo.add(backendInfoItem);
    return this;
  }

   /**
   * Error responses from backend systems. This data is optional and can not be considered as always present. Any errors that need custom handling should be promotoed to the required statusCode field 
   * @return backendInfo
  **/
  @ApiModelProperty(value = "Error responses from backend systems. This data is optional and can not be considered as always present. Any errors that need custom handling should be promotoed to the required statusCode field ")
  public List<BackendResponse> getBackendInfo() {
    return backendInfo;
  }

  public void setBackendInfo(List<BackendResponse> backendInfo) {
    this.backendInfo = backendInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ErrorResponse errorResponse = (ErrorResponse) o;
    return Objects.equals(this.statusCode, errorResponse.statusCode) &&
        Objects.equals(this.message, errorResponse.message) &&
        Objects.equals(this.backendInfo, errorResponse.backendInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(statusCode, message, backendInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ErrorResponse {\n");
    
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    backendInfo: ").append(toIndentedString(backendInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

