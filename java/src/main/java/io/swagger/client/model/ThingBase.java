/*
 * FilipÂ´s API of Things
 * Some description here of the full API  GitHub Flavored Markdown can be used for rich text representation,     such as **bold**, *italic* and [links](https://swagger.io).           # Useful links for the tasks:  * **[REST Design Guidelines V4](https://confluence.tech.dnb.no/pages/viewpage.action?pageId=33488367)**  * **[SwaggerHub Way of Work](https://confluence.tech.dnb.no/display/KKO/SwaggerHub%3A+REST+API+Design+tool\\#SwaggerHub:RESTAPIDesigntool-WayofWork)**      
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * The ThingBase object represents a common set of fields that are used in other objects. The base object itself is not meant to be returned from the API. 
 */
@ApiModel(description = "The ThingBase object represents a common set of fields that are used in other objects. The base object itself is not meant to be returned from the API. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-14T11:51:05.361Z")



public class ThingBase {
  @SerializedName("field1")
  private String field1 = null;

  @SerializedName("field2")
  private Integer field2 = null;

  @SerializedName("field3")
  private BigDecimal field3 = null;

  /**
   * Description of field goes HERE
   */
  @JsonAdapter(Field4Enum.Adapter.class)
  public enum Field4Enum {
    VAL1("VAL1"),
    
    VAL2("VAL2"),
    
    VAL3("VAL3");

    private String value;

    Field4Enum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static Field4Enum fromValue(String text) {
      for (Field4Enum b : Field4Enum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<Field4Enum> {
      @Override
      public void write(final JsonWriter jsonWriter, final Field4Enum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public Field4Enum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return Field4Enum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("field4")
  private Field4Enum field4 = null;

  public ThingBase field1(String field1) {
    this.field1 = field1;
    return this;
  }

   /**
   * Description of field goes HERE
   * @return field1
  **/
  @ApiModelProperty(value = "Description of field goes HERE")
  public String getField1() {
    return field1;
  }

  public void setField1(String field1) {
    this.field1 = field1;
  }

  public ThingBase field2(Integer field2) {
    this.field2 = field2;
    return this;
  }

   /**
   * Description of field goes HERE
   * @return field2
  **/
  @ApiModelProperty(value = "Description of field goes HERE")
  public Integer getField2() {
    return field2;
  }

  public void setField2(Integer field2) {
    this.field2 = field2;
  }

  public ThingBase field3(BigDecimal field3) {
    this.field3 = field3;
    return this;
  }

   /**
   * Description of field goes HERE
   * @return field3
  **/
  @ApiModelProperty(value = "Description of field goes HERE")
  public BigDecimal getField3() {
    return field3;
  }

  public void setField3(BigDecimal field3) {
    this.field3 = field3;
  }

  public ThingBase field4(Field4Enum field4) {
    this.field4 = field4;
    return this;
  }

   /**
   * Description of field goes HERE
   * @return field4
  **/
  @ApiModelProperty(value = "Description of field goes HERE")
  public Field4Enum getField4() {
    return field4;
  }

  public void setField4(Field4Enum field4) {
    this.field4 = field4;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ThingBase thingBase = (ThingBase) o;
    return Objects.equals(this.field1, thingBase.field1) &&
        Objects.equals(this.field2, thingBase.field2) &&
        Objects.equals(this.field3, thingBase.field3) &&
        Objects.equals(this.field4, thingBase.field4);
  }

  @Override
  public int hashCode() {
    return Objects.hash(field1, field2, field3, field4);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ThingBase {\n");
    
    sb.append("    field1: ").append(toIndentedString(field1)).append("\n");
    sb.append("    field2: ").append(toIndentedString(field2)).append("\n");
    sb.append("    field3: ").append(toIndentedString(field3)).append("\n");
    sb.append("    field4: ").append(toIndentedString(field4)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

